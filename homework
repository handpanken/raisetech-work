<2020/9/26>
18.macOS への AWS SAM CLI のインストール
ステップ 5. AWS SAM CLI のインストール
引用:https://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html
→brew install aws-sam-cli/完了
19.sam build
→Build Succeeded
20.sam deploy --guided
引用
→Error: Failed to create managed resources: Unable to locate credentials
=エラーが発生しました。管理されたリソースの作成に失敗しました。資格情報を見つけることができません

——————————————next—————————————
21.
aws configure list
      Name                    Value             Type    Location
      ----                    -----             ----    --------
   profile                <not set>             None    None
access_key                <not set>             None    None
secret_key                <not set>             None    None
    region                <not set>             None    None
→credential（資格情報）を確認
したのですが、profile/access_key/secret_key/regionに設定する値は、どこを引用すれば良いですか？
引用:https://financial-it-engineer.hatenablog.com/entry/2020/04/14/121237



——————————————以下、昨日作業分—————————————
<2020/9/25>
0.Lambda 関数については Python 3.8 で作成しています。
Python 環境が無い方は、こちらなど、ご自身の環境へ Python をインストールしてください。
1.Pythonなどで利用するC言語環境として、Command Line Tools をインストール
引用:https://www.python.jp/install/macos/install_python.html
2.ターミナルを起動し、次のコマンドを実行します。
$ gcc
3.clang: error: no input files
→gccコマンドがインストール済みで使える状態なので下記の作業は行わなくてもよい
4.実行
% /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
5.brew install python@3.8
6.Python3.7を実行する python3.8 コマンドは、/usr/local/bin ディレクトリに登録されないので、次のように手動で登録
→ln -s /usr/local/opt/python@3.8/bin/python3.8/usr/local/bin/python3.8
7.python3.8 のように、コマンドファイル名で使い分けるようにします。  
$ python3.8 
Python 3.8.3 (default, Jul  8 2020, 14:27:55) [Clang 11.0.3 (clang-1103.0.32.62)] on darwin Type "help", "copyright", "credits" or "license" for more information. >>>
8.macOS への AWS SAM CLI（サーバーレスアプリケーションの作成と管理を容易にするコマンドラインツール） のインストール
引用:https://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html
9.IAM アクセス許可の設定  
## IAM
https://608283427828.signin.aws.amazon.com/
アクセスキー：AKIAY3IEEQP2HWVOAGVI
シークレットアクセスキー：LrZC2Z3Q6bOVI76anXVhlcoim222YihYONSzFflJ
pass:6106217PEP25FE
10.Docker をインストールします。
注意 Dockerは、アプリケーションをローカルでテストするための前提条件です。  
→Docker をインストールします。
AWS SAM CLI では、macOS Sierra 10.12 以降で動作する Docker がサポートされています。Docker をインストールするには、Install Docker Desktop for Mac を参照してください。

——————————————未解決—————————————

11.共有ドライブを設定します。
AWS SAM CLI では、プロジェクトディレクトリまたは親ディレクトリが共有ドライブにリストされている必要があります。
macOS でドライブを共有するには、File sharing を参照してください。
引用https://docs.aws.amazon.com/ja_jp/serverless-application-model/latest/developerguide/serverless-sam-cli-install-mac.html
→binとは、Binary codeのことでようするに実行可能プログラム置き場ということ。バイナリということはコンパイル型の言語により作られたプログラムが置かれるのだろう。
引用https://qiita.com/totzyuta/items/84d610f56129a186f0c5

——————————————未解決—————————————


12.AWS SAM CLI のインストール
13.Lambda 関数にデプロイするアプリケーション パッケージをビルド
sam build
→zsh: command not found: sam
14.シェルの変更のコマンドはchshコマンド(change shell)を用います。
chsh -s /bin/zsh
15.template.yaml 取得
16.template.yaml が配置されているディレクトリに移動
17.handpan@handpan-no-MacBook-Pro jump-cut-automation % chsh -s /bin/bash
Changing shell for handpan.
Password for handpan: 
chsh: no changes made
handpan@handpan-no-MacBook-Pro jump-cut-automation % echo $SHELL 
/bin/zsh
handpan@handpan-no-MacBook-Pro jump-cut-automation % 
→chsh: no changes madeから
/zsh/bashに変更されていない
18.macOS Catalina クリーンインストール検討 
